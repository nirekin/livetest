name: nirekin
qualifier: dev

ekara:
  distribution:
    repository: nirekin/distribution
  components:
    ek-aws:
      repository: ekara-platform/aws-provider
    ek-swarm:
      repository: nirekin/swarm-orchestrator        
        
orchestrator:
  component: ek-swarm
  docker:
    params:
      log-driver: json-file
      log-opts:
        max-size: "20m"
        max-file: "3"
      disable-legacy-registry: true
      userland-proxy: true
      live-restore: false
      hosts:
        - "unix:///var/run/docker.sock"
        - "tcp://0.0.0.0:2376"
      tls: true
      tlscacert: "/etc/docker/certs/ca.pem"
      tlscert: "/etc/docker/certs/cert.pem"
      tlskey: "/etc/docker/certs/key.pem"
      tlsverify: true

providers:
  ek-aws:
    component: ek-aws
    params:
      instance_type: "t2.micro"
      ami_id: "ami-f90a4880"
      vpc_id: "vpc-880aeaef"
      region: {{ .ek.aws_region }}
    env:
      AWS_REGION: {{ .ek.aws.region }}
      AWS_ACCESS_KEY_ID: {{ .ek.aws.accessKey.id }}
      AWS_SECRET_ACCESS_KEY: {{ .ek.aws.accessKey.secret }}
    params:
      security_groups:
        - name: ek-ssh
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: Node SSH access
        - name: ek-swarm
          rules:
            - proto: tcp
              ports:
                - 2377
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm cluster management communications
            - proto: tcp
              ports:
                - 7946
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm communication among nodes
            - proto: udp
              ports:
                - 7946
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm communication among nodes
            - proto: udp
              ports:
                - 4789
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm overlay network traffic      
      
nodes:
  mongoN1:
    instances: 1
    provider:
      name: ek-aws
    labels:
      node_name: mongoN1
  mongoN3:
    instances: 1
    provider:
      name: ek-aws
    labels:
      node_name: mongoN3
