name: ekara-demo-al3
qualifier: dev

ekara:
  distribution:
    repository: ekara-platform/distribution
  components:
    visualizer:
      repository: ekara-platform/swarm-visualizer-stack
providers:
  ek-aws:
    component: ek-aws
    env:
      AWS_REGION: {{ .Vars.ek.aws.region }}
      AWS_ACCESS_KEY_ID: {{ .Vars.ek.aws.accessKey.id }}
      AWS_SECRET_ACCESS_KEY: {{ .Vars.ek.aws.accessKey.secret }}
    params:
      region: {{ .Vars.ek.aws.region }} 
      security_groups:
        - name: ek-ssh
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: Node SSH access
        - name: ek-swarm
          rules:
            - proto: tcp
              ports:
                - 2377
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm cluster management communications
            - proto: tcp
              ports:
                - 7946
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm communication among nodes
            - proto: udp
              ports:
                - 7946
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm communication among nodes
            - proto: udp
              ports:
                - 4789
              cidr_ip: 0.0.0.0/0
              rule_desc: Swarm overlay network traffic
nodes:
  _:
    provider:
      name: ek-aws
      params:
        instance_type: "t2.micro"
        ami_id: "ami-f90a4880"
        vpc_id: "vpc-880aeaef"
        security_groups:
          - name: app
            rules:
              - proto: tcp
                ports:
                  - {{ .Vars.app.visualizer.port }} 
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on port {{ .Vars.app.visualizer.port }} for the swarm visualizer 
    volumes:
      - path: /data1
        params:
          device_name: xvdf
          volume_type: gp2
          volume_size: 9
          delete_on_termination: true
      - path: /var/lib/docker
        params:
          device_name: xvdg
          volume_type: standard
          volume_size: 1
          delete_on_termination: true
          tags:
            Type: Docker
            TestTagKey: TestTagValue
  nodeset1:
    instances: 2
  nodeset2:
    instances: 1

stacks:
  visualizer:
    component: visualizer
